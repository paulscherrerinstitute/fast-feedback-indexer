@article{Gasparotto:jo5098,
author = "Gasparotto, Piero and Barba, Luis and Stadler, Hans-Christian and Assmann, Greta and Mendon{\c{c}}a, Henrique and Ashton, Alun W. and Janousch, Markus and Leonarski, Filip and B{\'{e}}jar, Benjam{\'\i}n",
title = "{{\it TORO Indexer}: a {\it PyTorch}-based indexing algorithm for kilohertz serial crystallography}",
journal = "Journal of Applied Crystallography",
year = "2024",
volume = "57",
number = "4",
pages = "",
month = "Aug",
doi = {10.1107/S1600576724003182},
url = {https://doi.org/10.1107/S1600576724003182},
abstract = {Serial crystallography (SX) involves combining observations from a very large number of diffraction patterns coming from crystals in random orientations. To compile a complete data set, these patterns must be indexed ({\it i.e.} their orientation determined), integrated and merged. Introduced here is {\it TORO} ({\it Torch}-powered robust optimization) {\it Indexer}, a robust and adaptable indexing algorithm developed using the {\it PyTorch} framework. {\it TORO} is capable of operating on graphics processing units (GPUs), central processing units (CPUs) and other hardware accelerators supported by {\it PyTorch}, ensuring compatibility with a wide variety of computational setups. In tests, {\it TORO} outpaces existing solutions, indexing thousands of frames per second when running on GPUs, which positions it as an attractive candidate to produce real-time indexing and user feedback. The algorithm streamlines some of the ideas introduced by previous indexers like {\it DIALS} real-space grid search [Gildea, Waterman, Parkhurst, Axford, Sutton, Stuart, Sauter, Evans & Winter (2014). {\it Acta Cryst.} D{\bf 70}, 2652{--}2666] and {\it XGandalf} [Gevorkov, Yefanov, Barty, White, Mariani, Brehm, Tolstikova, Grigat & Chapman (2019). {\it Acta Cryst.} A{\bf 75}, 694{--}704] and refines them using faster and principled robust optimization techniques which result in a concise code base consisting of less than 500 lines. On the basis of evaluations across four proteins, {\it TORO} consistently matches, and in certain instances outperforms, established algorithms such as {\it XGandalf} and {\it MOSFLM} [Powell (1999). {\it Acta Cryst.} D{\bf 55}, 1690{--}1695], occasionally amplifying the quality of the consolidated data while achieving superior indexing speed. The inherent modularity of {\it TORO} and the versatility of {\it PyTorch} code bases facilitate its deployment into a wide array of architectures, software platforms and bespoke applications, highlighting its prospective significance in SX.},
keywords = {PyTorch indexer, robust optimization, real-time indexing algorithms, serial crystallography, macromolecular crystallography, X-ray image acquisition, Torch scripts},
}
